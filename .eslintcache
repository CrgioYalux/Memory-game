[{"D:\\juegoDeMemoria\\memory-game\\src\\index.js":"1","D:\\juegoDeMemoria\\memory-game\\src\\components\\board.js":"2","D:\\juegoDeMemoria\\memory-game\\src\\App.js":"3","D:\\juegoDeMemoria\\memory-game\\src\\components\\difficulty.js":"4","D:\\juegoDeMemoria\\memory-game\\src\\reportWebVitals.js":"5","D:\\juegoDeMemoria\\memory-game\\src\\components\\counter.js":"6","D:\\juegoDeMemoria\\memory-game\\src\\components\\generation.js":"7"},{"size":288,"mtime":1612555193477,"results":"8","hashOfConfig":"9"},{"size":4841,"mtime":1612554464411,"results":"10","hashOfConfig":"9"},{"size":1998,"mtime":1612543286212,"results":"11","hashOfConfig":"9"},{"size":868,"mtime":1612543214659,"results":"12","hashOfConfig":"9"},{"size":362,"mtime":1610844713754,"results":"13","hashOfConfig":"9"},{"size":1311,"mtime":1612188836318,"results":"14","hashOfConfig":"9"},{"size":617,"mtime":1612553990891,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"n7tccy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\juegoDeMemoria\\memory-game\\src\\index.js",[],["33","34"],"D:\\juegoDeMemoria\\memory-game\\src\\components\\board.js",["35"],"import './css/animation.css'\r\nimport React, {useEffect, useState} from 'react'\r\nimport generate from './generation'\r\n\r\nconst Board = ({difficulty = 0, visibility, isPlaying, handleWinning, handleLosing}) => {\r\n    const [selected, setSelected] = useState([])\r\n    const [matches, setMatches] = useState([])\r\n    const [pairs, setPairs] = useState([])\r\n\r\n    useEffect(() => {\r\n        if((matches.length * 2) === (difficulty**2 - 1)) {\r\n            console.log(\"one\");\r\n            const checks = document.querySelectorAll('.checked')\r\n            for(const check of checks){\r\n                check.classList.add('win')\r\n            }\r\n            setTimeout(() => {\r\n                for(const check of checks){\r\n                check.classList.remove('win')\r\n                setMatches([])\r\n            }}, 2000)\r\n\r\n            setTimeout(() => {\r\n                handleWinning()\r\n            }, 2001)\r\n        }\r\n    }, [matches])\r\n\r\n\r\n    useEffect(() => {\r\n        if (difficulty) {    \r\n            console.log(\"two\");\r\n            const keys = [...Array(difficulty**2).keys()]\r\n            const values = generate(difficulty)\r\n            setPairs(\r\n                keys.reduce((acc, key) => {\r\n                    return [...acc, {key:key, value:values[key], active:false}]\r\n                }, [])\r\n                )\r\n                setSelected([])\r\n        }\r\n    }, [difficulty])\r\n\r\n    useEffect(() => {\r\n        if (selected.length === 2){\r\n            console.log(\"three\");\r\n            if (selected[0].value === selected[1].value){\r\n                setMatches(prev => {\r\n                    return [...prev, [selected[0].key, selected[1].key]]\r\n                })\r\n            }\r\n            else {\r\n                setPairs(\r\n                    pairs.reduce((acc, pair) => {\r\n                        if (selected[0].key === pair.key || selected[1].key === pair.key) return [...acc, {key:pair.key, value:pair.value, active:false}]\r\n                        else {\r\n                            if (pair.active) return [...acc, {key:pair.key, value:pair.value, active:true}]\r\n                            else return [...acc, {key:pair.key, value:pair.value, active:false}]\r\n                        }\r\n                    }, [])\r\n                )\r\n            }\r\n            setSelected([])\r\n        }\r\n    }, [selected, pairs])\r\n\r\n    const handleClick = (e) => {\r\n            if(e.target.dataset.value === \"!\"){\r\n                e.target.classList.add('lose')\r\n                setTimeout(() => {\r\n                    setSelected([])\r\n                    setMatches([])\r\n                    e.target.classList.remove('lose')\r\n                }, 2000)\r\n                setTimeout(() => {\r\n                    handleLosing()\r\n                }, 2001)\r\n            }\r\n            else{\r\n                setPairs(pairs.reduce((acc, pair) => {\r\n                    if (pair.key === Number(e.target.dataset.key)) {\r\n                        setSelected(prev => {\r\n                            return [...prev, {key:pair.key, value:pair.value}]\r\n                        })      \r\n                        return [...acc, {key:pair.key, value:pair.value, active:true}]\r\n                    }\r\n                    else return [...acc, {key:pair.key, value:pair.value, active:pair.active}]\r\n                }, []))\r\n            }\r\n        }\r\n    \r\n\r\n    if(isPlaying){\r\n        return (\r\n            <div class={`w-64 h-64 md:w-96 md:h-96 bg-green-300 border-2 border-black grid grid-cols-${difficulty} grid-rows-${difficulty} gap-1 p-1.5`}>\r\n            {\r\n                pairs.map(pair => {\r\n                    return (\r\n                        visibility \r\n                        ? <div class=\"w-full h-full  bg-red-500 hover:bg-red-400 cursor-pointer grid place-items-center text-lg font-semibold text-white\" key={pair.key} data-value={pair.value}>{pair.value}</div>\r\n                        : pair.active \r\n                            ? <div class=\"checked w-full h-full  bg-yellow-300 hover:bg-red-200 cursor-pointer grid place-items-center text-lg font-semibold text-white\" key={pair.key} data-key={pair.key} data-value={pair.value} data-active={pair.active}>{pair.value}</div>\r\n                            : <div class=\"w-full h-full  bg-red-500 hover:bg-red-400 cursor-pointer grid place-items-center text-lg font-semibold text-white text-opacity-0\" key={pair.key} data-key={pair.key} data-value={pair.value} data-active={pair.active} onClick={(e)=>{handleClick(e)}}>?</div>\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div class=\"w-64 h-64 md:w-96 md:h-96 bg-green-300 border-2 border-black grid place-items-center\">\r\n                <p>Choose a difficulty to start</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board","D:\\juegoDeMemoria\\memory-game\\src\\App.js",[],"D:\\juegoDeMemoria\\memory-game\\src\\components\\difficulty.js",[],"D:\\juegoDeMemoria\\memory-game\\src\\reportWebVitals.js",[],"D:\\juegoDeMemoria\\memory-game\\src\\components\\counter.js",[],["36","37"],"D:\\juegoDeMemoria\\memory-game\\src\\components\\generation.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":27,"column":8,"nodeType":"44","endLine":27,"endColumn":17,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'difficulty' and 'handleWinning'. Either include them or remove the dependency array. If 'handleWinning' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [difficulty, handleWinning, matches]",{"range":"53","text":"54"},[922,931],"[difficulty, handleWinning, matches]"]